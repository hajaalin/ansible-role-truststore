---
# Configure JKS trust store.

# The trust store file is built from scratch every time, to make sure it
# has the exact set of CA certificates configured. To avoid an unnecessary rebuild, once
# you have a working setup, set "truststore_rebuild: false".

- block:
  - name: remove existing trust store
    file:
      path: "{{ truststore_path }}"
      state: absent
  - name: remove existing certificate directory
    file:
      path: "{{ truststore_certs_dir }}"
      state: absent

  - name: create directory for certificates
    file:
      path: "{{ truststore_certs_dir }}"
      state: directory
      owner: "{{ truststore_owner }}"
      group: "{{ truststore_group }}"
      mode: "{{ truststore_certs_mode }}"

  - name: create list of certificate urls
    blockinfile:
      create: yes
      name: "{{ truststore_certs_list }}"
      owner: "{{ truststore_owner }}"
      group: "{{ truststore_group }}"
      mode: "{{ truststore_certs_mode }}"
      block: |
        {{ truststore_cert_url_block }}

  - name: test with_lines
    sudo_user: "{{ truststore_owner }}"
    debug: msg={{ item }}
    with_lines:
      - "{{ truststore_certs_list }}"

  - name: download certificates
    sudo_user: "{{ truststore_owner }}"
    get_url:
      url: "{{ item }}"
      dest: "{{ truststore_certs_dir }}"
    with_lines:
      - "{{ truststore_certs_list }}"

  - name: test file glob
    sudo_user: "{{ truststore_owner }}"
    debug: msg={{ item }}
    with_fileglob:
      - "{{ truststore_certs_dir }}/*"

  - name: import certificates in a trust store file
    sudo_user: "{{ truststore_owner }}"
    command: keytool -importcert -noprompt -keystore {{ truststore_path }} -storepass {{ truststore_password }} -storetype JKS -providername SUN -file {{ item }} -alias {{ item }}
    with_fileglob:
      - "{{ truststore_certs_dir }}/*"
    notify: "{{ truststore_rebuild_handler }}"
  when: truststore_rebuild
